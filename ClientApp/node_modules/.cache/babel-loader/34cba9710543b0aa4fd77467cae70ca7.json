{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\steph\\\\source\\\\repos\\\\BikeRental\\\\BikeRental\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\steph\\\\source\\\\repos\\\\BikeRental\\\\BikeRental\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\Users\\\\steph\\\\source\\\\repos\\\\BikeRental\\\\BikeRental\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\steph\\\\source\\\\repos\\\\BikeRental\\\\BikeRental\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\steph\\\\source\\\\repos\\\\BikeRental\\\\BikeRental\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\steph\\\\source\\\\repos\\\\BikeRental\\\\BikeRental\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';export var FetchData=/*#__PURE__*/function(_Component){_inherits(FetchData,_Component);var _super=_createSuper(FetchData);function FetchData(props){var _this;_classCallCheck(this,FetchData);_this=_super.call(this,props);_this.state={forecasts:[],loading:true};return _this;}_createClass(FetchData,[{key:\"componentDidMount\",value:function componentDidMount(){this.populateWeatherData();}},{key:\"render\",value:function render(){var contents=this.state.loading?/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"em\",null,\"Loading...\")):FetchData.renderForecastsTable(this.state.forecasts);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",{id:\"tabelLabel\"},\"Weather forecast\"),/*#__PURE__*/React.createElement(\"p\",null,\"This component demonstrates fetching data from the server.\"),contents);}},{key:\"populateWeatherData\",value:function(){var _populateWeatherData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('weatherforecast');case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;this.setState({forecasts:data,loading:false});case 7:case\"end\":return _context.stop();}}},_callee,this);}));function populateWeatherData(){return _populateWeatherData.apply(this,arguments);}return populateWeatherData;}()}],[{key:\"renderForecastsTable\",value:function renderForecastsTable(forecasts){return/*#__PURE__*/React.createElement(\"table\",{className:\"table table-striped\",\"aria-labelledby\":\"tabelLabel\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Date\"),/*#__PURE__*/React.createElement(\"th\",null,\"Temp. (C)\"),/*#__PURE__*/React.createElement(\"th\",null,\"Temp. (F)\"),/*#__PURE__*/React.createElement(\"th\",null,\"Summary\"))),/*#__PURE__*/React.createElement(\"tbody\",null,forecasts.map(function(forecast){return/*#__PURE__*/React.createElement(\"tr\",{key:forecast.date},/*#__PURE__*/React.createElement(\"td\",null,forecast.date),/*#__PURE__*/React.createElement(\"td\",null,forecast.temperatureC),/*#__PURE__*/React.createElement(\"td\",null,forecast.temperatureF),/*#__PURE__*/React.createElement(\"td\",null,forecast.summary));})));}}]);return FetchData;}(Component);FetchData.displayName=FetchData.name;","map":{"version":3,"sources":["C:/Users/steph/source/repos/BikeRental/BikeRental/ClientApp/src/components/FetchData.js"],"names":["React","Component","FetchData","props","state","forecasts","loading","populateWeatherData","contents","renderForecastsTable","fetch","response","json","data","setState","map","forecast","date","temperatureC","temperatureF","summary","displayName","name"],"mappings":"imCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,UAAaC,CAAAA,SAAb,sGAGE,mBAAYC,KAAZ,CAAmB,2CACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CAAEC,SAAS,CAAE,EAAb,CAAiBC,OAAO,CAAE,IAA1B,CAAb,CAFiB,aAGlB,CANH,mFAQsB,CAClB,KAAKC,mBAAL,GACD,CAVH,uCAqCW,CACP,GAAIC,CAAAA,QAAQ,CAAG,KAAKJ,KAAL,CAAWE,OAAX,cACX,0CAAG,2CAAH,CADW,CAEXJ,SAAS,CAACO,oBAAV,CAA+B,KAAKL,KAAL,CAAWC,SAA1C,CAFJ,CAIA,mBACE,4CACE,0BAAI,EAAE,CAAC,YAAP,qBADF,cAEE,0FAFF,CAGGG,QAHH,CADF,CAOD,CAjDH,0SAoD2BE,CAAAA,KAAK,CAAC,iBAAD,CApDhC,QAoDUC,QApDV,qCAqDuBA,CAAAA,QAAQ,CAACC,IAAT,EArDvB,QAqDUC,IArDV,eAsDI,KAAKC,QAAL,CAAc,CAAET,SAAS,CAAEQ,IAAb,CAAmBP,OAAO,CAAE,KAA5B,CAAd,EAtDJ,kPAY8BD,SAZ9B,CAYyC,CACrC,mBACE,6BAAO,SAAS,CAAC,qBAAjB,CAAuC,kBAAgB,YAAvD,eACE,8CACE,2CACE,qCADF,cAEE,0CAFF,cAGE,0CAHF,cAIE,wCAJF,CADF,CADF,cASE,iCACGA,SAAS,CAACU,GAAV,CAAc,SAAAC,QAAQ,qBACrB,0BAAI,GAAG,CAAEA,QAAQ,CAACC,IAAlB,eACE,8BAAKD,QAAQ,CAACC,IAAd,CADF,cAEE,8BAAKD,QAAQ,CAACE,YAAd,CAFF,cAGE,8BAAKF,QAAQ,CAACG,YAAd,CAHF,cAIE,8BAAKH,QAAQ,CAACI,OAAd,CAJF,CADqB,EAAtB,CADH,CATF,CADF,CAsBD,CAnCH,uBAA+BnB,SAA/B,EAAaC,S,CACJmB,W,CAAcnB,SAAS,CAACoB,I","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.date}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateWeatherData() {\r\n    const response = await fetch('weatherforecast');\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}